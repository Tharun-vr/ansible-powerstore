# This sample fetches the list of all the volume names which have the capacity more than the threshold capacity.
---
- name: Volumes which have capacity more than the threshold
  hosts: localhost
  connection: local
  vars:
    array_ip: 'ip_address_of_the_array'
    user: 'your_username'
    password: 'your_password'
    verifycert: False
    threshold_size: enter_cap(in Bytes)
  collections:
  - dellemc.powerstore
  tasks:
    - name: Get the details of the array
      info:
        array_ip: "{{array_ip}}"
        user: "{{user}}"
        password: "{{password}}"
        verifycert: "{{verifycert}}"
        gather_subset:
          - vol
      register: subset_result
# The set_fact fetches the names of the volumes from the subset_result(output of the previous task).
    - set_fact:
        all_volumes_names: "{{ subset_result['Volumes'] | map(attribute='name') | list }}"
    
    - name: Get the details of all the volumes in the array
      volume:
        array_ip: "{{array_ip}}"
        user: "{{user}}"
        password: "{{password}}"
        verifycert: "{{verifycert}}"
        vol_name: "{{item}}"
        state: "present"
      register: all_volumes_details
      loop: "{{ all_volumes_names }}"

# The set_fact fetches the size attribute from the all_volumes_details(output of the previous task)
    - set_fact:
        all_volumes_size: "{{ all_volumes_details['results'] | map(attribute='volume_details.size') | list }}"
        
# The volumes are filtered based on the threshold size in the when statement. 
# The volumes which have the size more than the threshold size will be returned. Rest of the volumes will be skipped.
    - name: List of all the Volumes Which have capacity more than the threshold
      debug:
        msg: "{{item.1}}"
      loop: "{{ all_volumes_size|zip(all_volumes_names)|list }}"
      when: item.0|int >= threshold_size
